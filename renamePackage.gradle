// Создаем новую задачу для переименования пакета исходных файлов
task renamePackageJava(type: Copy) {
    def oldPackageName = "androidx/media3"
    def newPackageName = "io/bidmachine/media3"

    // Устанавливаем путь к исходным файлам с текущим пакетом
    from("${projectDir}/src/main/java/${oldPackageName}".toString())

    // Устанавливаем путь к исходным файлам с новым пакетом
    into("${projectDir}/src/main/java/${newPackageName}".toString())

    // Переименовываем файлы, меняя пакет
    eachFile { details ->
        def filePath = details.path
        def oldPackagePath = "${projectDir}/src/main/java/${oldPackageName}".toString()
        println("Renaming file: ${filePath} from package: ${oldPackagePath}")
        details.path = filePath.replace(oldPackageName, newPackageName)

        // Меняем пакет внутри Java файлов
        if (details.file.isFile() && (details.file.name.endsWith(".java") || details.file.name.endsWith(".kt"))) {
            details.file.text = details.file.text.replace("${oldPackageName.replace('/', '.')}", "${newPackageName.replace('/', '.')}")
        }
    }

    def oldPackageName1 = "androidx.media3"
    def newPackageName1 = "io.bidmachine.media3"
    // Обновляем пакет в манифесте
    doLast {
        def manifestFile = file("${projectDir}/src/main/AndroidManifest.xml")
        String manifestContent = manifestFile.text
        manifestContent = manifestContent.replace(oldPackageName1, newPackageName1)
        manifestFile.text = manifestContent
        println("Updated package in AndroidManifest.xml: ${oldPackageName} to ${newPackageName}")
    }

    // Обновляем пакет в XML файлах
    doLast {
        def xmlFiles = fileTree(dir: "${projectDir}/src/main/res", include: '**/*.xml')
        xmlFiles.each { xmlFile ->
            def xmlContent = xmlFile.text
            xmlContent = xmlContent.replace(oldPackageName1, newPackageName1)
            xmlFile.text = xmlContent
            println("Updated package in ${xmlFile}")
        }
    }

    // Удаляем старые файлы из старого пакета
    doLast {
        def oldPackagePath = "${projectDir}/src/main/java/${oldPackageName}".toString()
        fileTree(dir: oldPackagePath).visit { FileVisitDetails details ->
            details.file.delete()
        }
    }
}

// Создаем новую задачу для переименования пакета исходных файлов
task renamePackageAidl(type: Copy) {
    def oldPackageName = "androidx/media3"
    def newPackageName = "io/bidmachine/media3"

    // Устанавливаем путь к исходным файлам с текущим пакетом
    from("${projectDir}/src/main/aidl/${oldPackageName}".toString())

    // Устанавливаем путь к исходным файлам с новым пакетом
    into("${projectDir}/src/main/aidl/${newPackageName}".toString())
    // Обработка файлов aidl
    eachFile { details ->
        def filePath = details.path
        def oldPackagePath = "${projectDir}/src/main/aidl/${oldPackageName}".toString()
        def newPackagePath = "${projectDir}/src/main/aidl/${newPackageName}".toString()
        println("Renaming file: ${filePath}\n from package: ${oldPackagePath}\n to package ${newPackagePath}")
        details.path = filePath.replace(oldPackageName, newPackageName)

        // Меняем пакет внутри Aidl файлов
        if (details.file.isFile() && details.file.name.endsWith(".aidl")) {
            details.file.text = details.file.text.replace("${oldPackageName.replace('/', '.')}", "${newPackageName.replace('/', '.')}")
        }
    }

    def oldPackageName1 = "androidx.media3"
    def newPackageName1 = "io.bidmachine.media3"
    // Обновляем пакет в манифесте
    doLast {
        def manifestFile = file("${projectDir}/src/main/AndroidManifest.xml")
        String manifestContent = manifestFile.text
        manifestContent = manifestContent.replace(oldPackageName1, newPackageName1)
        manifestFile.text = manifestContent
        println("Updated package in AndroidManifest.xml: ${oldPackageName} to ${newPackageName}")
    }

    // Обновляем пакет в других файлах проекта (при необходимости)
    // Например, strings.xml, файлы ресурсов и т.д.
    // Можете добавить сюда дополнительные задачи для изменения пакета в других файлах

    // Удаляем старые файлы из старого пакета
    doLast {
        def oldPackagePath = "${projectDir}/src/main/aidl/${oldPackageName}".toString()
        fileTree(dir: oldPackagePath).visit { FileVisitDetails details ->
            details.file.delete()
        }
    }
}

// Создаем новую задачу для переименования пакета исходных файлов
task renamePackageTest(type: Copy) {
    def oldPackageName = "androidx/media3"
    def newPackageName = "io/bidmachine/media3"

    // Устанавливаем путь к исходным файлам с текущим пакетом
    from("${projectDir}/src/test/java/${oldPackageName}".toString())

    // Устанавливаем путь к исходным файлам с новым пакетом
    into("${projectDir}/src/test/java/${newPackageName}".toString())

    // Переименовываем файлы, меняя пакет
    eachFile { details ->
        def filePath = details.path
        def oldPackagePath = "${projectDir}/src/test/java/${oldPackageName}".toString()
        println("Renaming file: ${filePath} from package: ${oldPackagePath}")
        details.path = filePath.replace(oldPackageName, newPackageName)

        // Меняем пакет внутри Java файлов
        if (details.file.isFile() && (details.file.name.endsWith(".java") || details.file.name.endsWith(".kt"))) {
            details.file.text = details.file.text.replace("${oldPackageName.replace('/', '.')}", "${newPackageName.replace('/', '.')}")
        }
    }

    // Обновляем пакет в других файлах проекта (при необходимости)
    // Например, strings.xml, файлы ресурсов и т.д.
    // Можете добавить сюда дополнительные задачи для изменения пакета в других файлах

    // Удаляем старые файлы из старого пакета
    doLast {
        def oldPackagePath = "${projectDir}/src/test/java/${oldPackageName}".toString()
        fileTree(dir: oldPackagePath).visit { FileVisitDetails details ->
            details.file.delete()
        }
    }
}

// Создаем новую задачу для переименования пакета исходных файлов
task renamePackageAndroidTest(type: Copy) {
    def oldPackageName = "androidx/media3"
    def newPackageName = "io/bidmachine/media3"

    // Устанавливаем путь к исходным файлам с текущим пакетом
    from("${projectDir}/src/androidTest/java/${oldPackageName}".toString())

    // Устанавливаем путь к исходным файлам с новым пакетом
    into("${projectDir}/src/androidTest/java/${newPackageName}".toString())

    // Переименовываем файлы, меняя пакет
    eachFile { details ->
        def filePath = details.path
        def oldPackagePath = "${projectDir}/src/androidTest/java/${oldPackageName}".toString()
        println("Renaming file: ${filePath} from package: ${oldPackagePath}")
        details.path = filePath.replace(oldPackageName, newPackageName)

        // Меняем пакет внутри Java файлов
        if (details.file.isFile() && (details.file.name.endsWith(".java") || details.file.name.endsWith(".kt"))) {
            details.file.text = details.file.text.replace("${oldPackageName.replace('/', '.')}", "${newPackageName.replace('/', '.')}")
        }
    }

    def oldPackageName1 = "androidx.media3"
    def newPackageName1 = "io.bidmachine.media3"
    // Обновляем пакет в манифесте
    doLast {
        def manifestFile = file("${projectDir}/src/androidTest/AndroidManifest.xml")
        String manifestContent = manifestFile.text
        manifestContent = manifestContent.replace(oldPackageName1, newPackageName1)
        manifestFile.text = manifestContent
        println("Updated package in AndroidManifest.xml: ${oldPackageName} to ${newPackageName}")
    }

    // Обновляем пакет в других файлах проекта (при необходимости)
    // Например, strings.xml, файлы ресурсов и т.д.
    // Можете добавить сюда дополнительные задачи для изменения пакета в других файлах

    // Удаляем старые файлы из старого пакета
    doLast {
        def oldPackagePath = "${projectDir}/src/androidTest/java/${oldPackageName}".toString()
        fileTree(dir: oldPackagePath).visit { FileVisitDetails details ->
            details.file.delete()
        }
    }
}

// Создаем новую таску для запуска всех тасков переименования пакета
task renameAllPackages {
    dependsOn renamePackageJava, renamePackageAidl, renamePackageTest, renamePackageAndroidTest
}

afterEvaluate {
    if (plugins.hasPlugin('com.android.library')) {
        android.libraryVariants.all { variant ->
            variant.javaCompile.dependsOn(renameAllPackages)
        }
    }
    if (plugins.hasPlugin('com.android.application')) {
        android.applicationVariants.all { variant ->
            variant.javaCompile.dependsOn(renameAllPackages)
        }
    }
}